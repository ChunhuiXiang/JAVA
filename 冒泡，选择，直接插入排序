package paixu;

import java.util.Arrays;
import java.util.Scanner;

public class MyPaiXU {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
     Scanner s=new Scanner(System.in);
     System.out.print("输入一串数字用英文字符分开");
     String st=s.next().toString();
     String str[]=st.split(",");
     int a[]=new int[str.length];
     for(int i=0;i<str.length;i++){
    	 a[i]=Integer.parseInt(str[i]);
     }
     System.out.print("排序前的顺序"+Arrays.toString(a));
     maopao(a);
     System.out.print("冒泡法排序后"+Arrays.toString(a));
     jiandanxuanze(a);
     System.out.print("简单选择排序后"+Arrays.toString(a));
     zhijiecharu(a);
     System.out.print("直接插入排序后"+Arrays.toString(a));
	}
    //冒泡法，先选出较大的依次排到最右边。速度最慢，稳定
	public static void maopao(int[] a){
		for(int i=0;i<a.length-1;i++){
			int temp=0;
			for(int j=0;j<a.length-i-1;j++){
				if(a[j]>a[j+1]){
					temp=a[j+1];
					a[j+1]=a[j];
					a[j]=temp;
				}
			}
		}
	}
	//简单排序法。选出最小的依次排到最左边。不稳定
	public static void jiandanxuanze(int[] a){
		for(int i=0;i<a.length;i++){
			int temp=0;
			for(int j=i+1;j<a.length;j++){
				if(a[j]<a[j-1]){
					temp=a[j-1];
					a[j-1]=a[j];
					a[j]=temp;
				}
			}
		}
		
	}
	//直接插入排序，从左到右一个个依次排，将要排的数字固定为temp，稳定。
	public static void zhijiecharu(int[] a)
	{
	int temp=0;
	for(int i=1;i<a.length;i++){
	    temp=a[i];
	   int j=i-1;
	   for(;j>=0&&temp<a[j];j--){
		   a[j+1]=a[j];
	   }
	   a[j+1]=temp;
	}
	}
}
